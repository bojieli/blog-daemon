#!/bin/bash

[ -z "$1" ] && exit 1
[ -z "$2" ] && exit 2
username=$1
domain=$2

BLOG_KEYDIR=/etc/nginx/blog-keys
TMP_KEYDIR=/tmp/uploaded-keys/$username
[ -d "$TMP_KEYDIR" ] || exit 100
cd $TMP_KEYDIR || exit 100

LETSENCRYPT_DIR=/opt/letsencrypt
LETSENCRYPT_ARCHIVE_DIR=/etc/letsencrypt/live
LETSENCRYPT_RENEWAL_DIR=/etc/letsencrypt/renewal

if [ -f "APPLY_FOR_LETSENCRYPT" ]; then
	[ -f "${domain}.conf" ] || exit 200
	# if exists, do not apply again
	if [ ! -f "${LETSENCRYPT_RENEWAL_DIR}/${domain}.conf" ]; then
		# apply for the certificate
		${LETSENCRYPT_DIR}/letsencrypt-auto --config ${domain}.conf certonly || exit 201
	fi
	# copy certificate to current dir
	sudo cp --copy-contents ${LETSENCRYPT_ARCHIVE_DIR}/${domain}/cert.pem    ssl.crt 		|| exit 202
	sudo cp --copy-contents ${LETSENCRYPT_ARCHIVE_DIR}/${domain}/privkey.pem ssl.key 		|| exit 202
	sudo cp --copy-contents ${LETSENCRYPT_ARCHIVE_DIR}/${domain}/chain.pem   intermediate.crt 	|| exit 202
fi

modkey=$(openssl rsa -noout -modulus -in ssl.key) || exit 101
modcrt=$(openssl x509 -noout -modulus -in ssl.crt) || exit 102
[ "$modkey" = "$modcrt" ] || exit 103

openssl verify -CApath /etc/ssl/certs/ -purpose sslserver -untrusted intermediate.crt ssl.crt || exit 104

wildcard_domain="*.${domain#*.}"
grepvar=$(echo "DNS:\\($domain\|$wildcard_domain\\)" | sed 's/\./\\./g' | sed 's/\*/\\*/g')
(openssl x509 -certopt no_subject,no_header,no_version,no_serial,no_signame,no_validity,no_subject,no_issuer,no_pubkey,no_sigdump,no_aux -text -noout -in ssl.crt | grep "$grepvar") || exit 106

cat ssl.crt >$BLOG_KEYDIR/$username.crt || exit 107
echo "" >>$BLOG_KEYDIR/$username.crt || exit 107  # in case no CRLF after first crt
cat intermediate.crt >>$BLOG_KEYDIR/$username.crt || exit 107

cat ssl.key >$BLOG_KEYDIR/$username.key || exit 108
rm -f $TMP_KEYDIR/*

exit 0
